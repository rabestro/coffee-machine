plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id "org.sonarqube" version "3.4.0.2513"
    id 'application'
    id 'groovy'
    id 'jacoco'
}

group = 'lv.id.jc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spock Framework
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // Spock Reports
    testRuntimeClasspath 'com.athaydes:spock-reports:2.4.0-groovy-4.0'

    // Simple Logging Facade (required for spock-reports)
    testImplementation 'org.slf4j:slf4j-api:2.0.3'
    testRuntimeClasspath 'org.slf4j:slf4j-simple:2.0.3'

    // Optional: Spock Extensions
    // spock-mockable allows creation of mocks otherwise un-mockable
//    testImplementation 'io.github.joke:spock-mockable:2.2.0'
    // Hamcrest matchers
    testImplementation 'org.hamcrest:hamcrest-core:2.2'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    // JUnit 5 Parameterized Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    // Mockito
    testImplementation 'org.mockito:mockito-core:4.8.0'
}

test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'MainKt'
}


jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/tests/jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/config/*"
            ])
        }))
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "rabestro_coffee-machine"
        property "sonar.organization", "rabestro"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}