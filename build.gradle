plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'application'
    id 'groovy'
    id 'jacoco'
}

group = 'lv.id.jc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spock Framework
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.13'

    // Spock Reports
    testRuntimeClasspath('com.athaydes:spock-reports:2.3.1-groovy-3.0') {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }

    // Required for spock-reports
    testImplementation 'org.slf4j:slf4j-api:2.0.3'
    testRuntimeClasspath 'org.slf4j:slf4j-simple:2.0.3'
}

test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

application {
    mainClassName = 'MainKt'
}


jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/config/*"
            ])
        }))
    }
}
